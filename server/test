// Dependencies
let  express = require('express');
let mongoose = require('mongoose');
let bodyParser = require('body-parser');
let path = require('path');
let cookieParser = require('cookie-parser');
//let logger = require('morgan');
let handlebars = require('express-handlebars');
// let multer = require('multer');
// let upload = multer({ dest: './uploads' });

const app = express();

mongoose.Promise = global.Promise;
mongoose.connect('mongodb://localhost/discover-u-write', function (err) {
    if (err){
        console.error(err)
    } else {
        console.log("You are connected to your db...")
    }
});

// Calling the routes
let routes = require('./routes')(app);

// View Engine
app.engine('handlebars', handlebars({ defaultLayout: 'main' }));
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'handlebars');

// Middleware
// app.use(multer({ dest: './uploads' }));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'views')));


// Catch 404 and forwards to handler
app.use(function (req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// development error handlers
if (app .get('env') === 'development') {
    app.use(function (err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// Production error
app.use( function(err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
      message: err.message,
      error: {}
  });
});

app.listen(3000, () => {
    console.log('Running on port 3000...');
});


